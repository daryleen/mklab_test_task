"""
 15. Пусть Вы работаете на предприятии, на котором постоянно меняются условия оценки качества продукции. 
 В зависимости от того, четный день или нет, работает тот или иной контроллер.
 Напишите программу, которая на входе получает дату и список выпущенной продукции с характеристиками.
 Для упрощения, пусть характеристика будет одна вес. 
 Пусть в четный день работает контроллер 1, он пропускает продукцию, которая весит от 1000 г до 1100 г.
 Пусть в нечетный день работает контроллер 2, он пропускает продукцию, которая весит от 950 г до 1050 г. 
 Формально, разумеется, оба контроллера работают в одних и тех же допусках и техкартах.
  Напишите программу, которая определяет, какой сегодня работает контроллер и в зависимости от этого
  какую следует выбрать функцию проверки продукции, если заранее известно, что кусок кода, который отвечает 
  за сам процесс оценки, в будущем менять нельзя, например потому, что этот код будет упакован в релиз или
  подлежит обязательной сертификации, а дату оценки нельзя передать в качестве параметра.
  Например:
  ...какой-то код…
  return check_good(good)
  ...какой-то код…..
"""

import datetime


def check_good_1(weight: float) -> bool:
    """ Проверка контроллера 1 (четный) """
    return 1000 <= weight <= 1100


def check_good_2(weight: float) -> bool:
    """ Проверка контроллера 2 (нечетный) """
    return 950 <= weight <= 1050


def get_controller() -> tuple[str, callable]:
    """ Определяет, какой контроллер работает сегодня """
    today = int(datetime.datetime.now().day)
    if today % 2 == 0:
        return 'К1', check_good_1
    else:
        return 'К2', check_good_2


def evaluate_product(weight: float) -> bool:
    """ Оценка качества """
    controller_name, check_func = get_controller()
    return check_func(weight)


def check_products(products: list[int]) -> list[bool]:
    """ Оценка продукции сегодняшним контроллером """
    controller_name, check_func = get_controller()
    print(f'Сегодня работает {controller_name}.')
    return [evaluate_product(weight) for weight in products]


def main():
    goods = [950, 1000, 1200, 1050, 1100]
    print(*check_products(goods))


if __name__ == '__main__':
    main()
